name: build on push

on: [ push, pull_request ]

jobs:
  buildUnityGames:
    if: (github.head_ref || github.ref_name) != 'update_flake_lock_action' && !contains(github.event.pull_request.labels.*.name, 'automation')
    name: build unity game ${{ matrix.targetGame.path }}
    strategy:
      fail-fast: false
      matrix:
        targetGame:
          - path: 2022.3.41f1-base
            targetPlatform: StandaloneLinux64
            runs-on: ubuntu-latest
    runs-on: ${{ matrix.targetGame.runs-on }}

    # only run if not automation, dependabot only does cargo and flake upgrade only affects rust stuff, which is checked already
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v4
        with:
          path: ${{ matrix.targetGame.path }}/Library
          key: Library-${{ hashFiles('${{ matrix.targetGame.path }}/Assets/**', '${{ matrix.targetGame.path }}/Packages/**', '${{ matrix.targetGame.path }}/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetGame.targetPlatform }}
          projectPath: ${{ matrix.targetGame.path }}
          buildsPath: ${{ matrix.targetGame.path }}/build
          buildName: build.x86_64

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targetGame.path }}
          path: ${{ matrix.targetGame.path }}/build/${{ matrix.targetGame.targetPlatform }}
  buildTestRunner:
    if: (github.head_ref || github.ref_name) != 'update_flake_lock_action' && !contains(github.event.pull_request.labels.*.name, 'automation')
    name: build test runner for ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: test-runner -> test-runner

      - name: build release
        run: cargo build --release
        working-directory: test-runner

      - if: matrix.os == 'ubuntu-latest'
        name: get built artifacts (unix)
        uses: actions/upload-artifact@v4
        with:
          name: test-runner-unix
          path: test-runner/target/release/test-runner

      - if: matrix.os == 'windows-latest'
        name: get built artifacts (windows)
        uses: actions/upload-artifact@v4
        with:
          name: test-runner-win
          path: test-runner/target/release/test-runner.exe
